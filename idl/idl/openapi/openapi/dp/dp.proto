syntax = "proto3";

package openapi;

import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "google/api/httpbody.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/ideascf/openapi-spec/idl/pbgen/proto/dp;dp";

message BarResponse {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "BarResponse",
      description: "this is BarResponse"
    }
  };

  string status = 1;
}

service DPService {
  rpc Bar(google.protobuf.Empty) returns (BarResponse) {
    option (google.api.http) = {
      get: "/v1/dp/bar"
    };
  }
}